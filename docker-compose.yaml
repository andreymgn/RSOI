version: "3"
services:
  psql_post:
    image: postgres:10-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=post
      - POSTGRES_USER=post
      - POSTGRES_PASSWORD=postpass
    volumes:
      - ./services/post/sql/script.sql:/docker-entrypoint-initdb.d/init.sql

  psql_comment:
    image: postgres:10-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=comment
      - POSTGRES_USER=comment
      - POSTGRES_PASSWORD=commentpass
    volumes:
      - ./services/comment/sql/script.sql:/docker-entrypoint-initdb.d/init.sql

  psql_poststats:
    image: postgres:10-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=poststats
      - POSTGRES_USER=poststats
      - POSTGRES_PASSWORD=poststatspass
    volumes:
      - ./services/poststats/sql/script.sql:/docker-entrypoint-initdb.d/init.sql

  psql_user:
    image: postgres:10-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=user
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=userpass
    volumes:
      - ./services/user/sql/script.sql:/docker-entrypoint-initdb.d/init.sql

  redis_post:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - "6379"

  redis_comment:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - "6379"

  redis_poststats:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - "6379"

  redis_user:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - "6379"

  jaeger:
      image: jaegertracing/all-in-one:latest
      expose:
        - "14269"
        - "5778"
        - "14268"
        - "14267"
        - "5775/udp"
        - "6831/udp"
        - "6832/udp"
      ports:
        - "16686:16686"

  post:
    build: .
    command: ["/RSOI", "-service", "post", "-port", "8080", "-jaeger-addr", "jaeger:6831", "-conn", "user=post password=postpass dbname=post sslmode=disable port=5432 host=psql_post", "-redis-addr", "redis_post:6379", "-redis-db", "0"]
    expose:
      - "8080"
    links:
      - jaeger
      - psql_post
      - redis_post
    depends_on:
      - jaeger
      - psql_post
      - redis_post

  comment:
    build: .
    command: ["/RSOI", "-service", "comment", "-port", "8080", "-jaeger-addr", "jaeger:6831", "-conn", "user=comment password=commentpass dbname=comment sslmode=disable port=5432 host=psql_comment", "-redis-addr", "redis_comment:6379", "-redis-db", "0"]
    expose:
      - "8080"
    restart: on-failure
    links:
      - jaeger
      - psql_comment
      - redis_comment
    depends_on:
      - jaeger
      - psql_comment
      - redis_comment

  poststats:
    build: .
    command: ["/RSOI", "-service", "poststats", "-port", "8080", "-jaeger-addr", "jaeger:6831", "-conn", "user=poststats password=poststatspass dbname=poststats sslmode=disable port=5432 host=psql_poststats", "-redis-addr", "redis_poststats:6379", "-redis-db", "0"]
    expose:
      - "8080"
    restart: on-failure
    links:
      - jaeger
      - psql_poststats
      - redis_poststats
    depends_on:
      - jaeger
      - psql_poststats
      - redis_poststats

  user:
    build: .
    command: ["/RSOI", "-service", "user", "-port", "8080", "-jaeger-addr", "jaeger:6831", "-conn", "user=user password=userpass dbname=user sslmode=disable port=5432 host=psql_user", "-redis-addr", "redis_user:6379", "-redis-db", "0"]
    expose:
      - "8080"
    restart: on-failure
    links:
      - jaeger
      - psql_user
      - redis_user
    depends_on:
      - jaeger
      - psql_user
      - redis_user

  api:
    build: .
    command: /RSOI -service api -port 8080 -post-server "post:8080" -comment-server "comment:8080" -post-stats-server "poststats:8080" -user-server "user:8080" -jaeger-addr jaeger:6831
    ports:
      - "8080:8080"
    expose:
      - "8080"
    restart: on-failure
    links:
      - jaeger
      - post
      - comment
      - poststats
      - user
    depends_on:
      - jaeger
      - post
      - comment
      - poststats
      - user

  frontend:
    build: services/frontend/
    command: nginx -g 'daemon off;'
    ports:
      - "8081:80"
    restart: on-failure
    links:
      - api
    depends_on:
      - api