// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/comment/proto/comment.proto

package comment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListCommentsRequest struct {
	PostUid              string   `protobuf:"bytes,1,opt,name=postUid,proto3" json:"postUid,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber           int32    `protobuf:"varint,3,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{0}
}

func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsRequest.Unmarshal(m, b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommentsRequest.Size(m)
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

func (m *ListCommentsRequest) GetPostUid() string {
	if m != nil {
		return m.PostUid
	}
	return ""
}

func (m *ListCommentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCommentsRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

type ListCommentsResponse struct {
	Comments             []*SingleComment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListCommentsResponse) Reset()         { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()    {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{1}
}

func (m *ListCommentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommentsResponse.Unmarshal(m, b)
}
func (m *ListCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommentsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsResponse.Merge(m, src)
}
func (m *ListCommentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommentsResponse.Size(m)
}
func (m *ListCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsResponse proto.InternalMessageInfo

func (m *ListCommentsResponse) GetComments() []*SingleComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type SingleComment struct {
	Uid                  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	PostUid              string               `protobuf:"bytes,2,opt,name=postUid,proto3" json:"postUid,omitempty"`
	Body                 string               `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	ParentUid            string               `protobuf:"bytes,4,opt,name=parentUid,proto3" json:"parentUid,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ModifiedAt           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=modifiedAt,proto3" json:"modifiedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SingleComment) Reset()         { *m = SingleComment{} }
func (m *SingleComment) String() string { return proto.CompactTextString(m) }
func (*SingleComment) ProtoMessage()    {}
func (*SingleComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{2}
}

func (m *SingleComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleComment.Unmarshal(m, b)
}
func (m *SingleComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleComment.Marshal(b, m, deterministic)
}
func (m *SingleComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleComment.Merge(m, src)
}
func (m *SingleComment) XXX_Size() int {
	return xxx_messageInfo_SingleComment.Size(m)
}
func (m *SingleComment) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleComment.DiscardUnknown(m)
}

var xxx_messageInfo_SingleComment proto.InternalMessageInfo

func (m *SingleComment) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *SingleComment) GetPostUid() string {
	if m != nil {
		return m.PostUid
	}
	return ""
}

func (m *SingleComment) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *SingleComment) GetParentUid() string {
	if m != nil {
		return m.ParentUid
	}
	return ""
}

func (m *SingleComment) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *SingleComment) GetModifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedAt
	}
	return nil
}

type CreateCommentRequest struct {
	PostUid              string   `protobuf:"bytes,1,opt,name=postUid,proto3" json:"postUid,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ParentUid            string   `protobuf:"bytes,3,opt,name=parentUid,proto3" json:"parentUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentRequest) Reset()         { *m = CreateCommentRequest{} }
func (m *CreateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommentRequest) ProtoMessage()    {}
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{3}
}

func (m *CreateCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentRequest.Unmarshal(m, b)
}
func (m *CreateCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentRequest.Marshal(b, m, deterministic)
}
func (m *CreateCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentRequest.Merge(m, src)
}
func (m *CreateCommentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCommentRequest.Size(m)
}
func (m *CreateCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentRequest proto.InternalMessageInfo

func (m *CreateCommentRequest) GetPostUid() string {
	if m != nil {
		return m.PostUid
	}
	return ""
}

func (m *CreateCommentRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *CreateCommentRequest) GetParentUid() string {
	if m != nil {
		return m.ParentUid
	}
	return ""
}

type UpdateCommentRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCommentRequest) Reset()         { *m = UpdateCommentRequest{} }
func (m *UpdateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCommentRequest) ProtoMessage()    {}
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{4}
}

func (m *UpdateCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCommentRequest.Unmarshal(m, b)
}
func (m *UpdateCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCommentRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCommentRequest.Merge(m, src)
}
func (m *UpdateCommentRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCommentRequest.Size(m)
}
func (m *UpdateCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCommentRequest proto.InternalMessageInfo

func (m *UpdateCommentRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *UpdateCommentRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type UpdateCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCommentResponse) Reset()         { *m = UpdateCommentResponse{} }
func (m *UpdateCommentResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCommentResponse) ProtoMessage()    {}
func (*UpdateCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{5}
}

func (m *UpdateCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCommentResponse.Unmarshal(m, b)
}
func (m *UpdateCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCommentResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCommentResponse.Merge(m, src)
}
func (m *UpdateCommentResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCommentResponse.Size(m)
}
func (m *UpdateCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCommentResponse proto.InternalMessageInfo

type DeleteCommentRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{6}
}

func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type DeleteCommentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentResponse) Reset()         { *m = DeleteCommentResponse{} }
func (m *DeleteCommentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentResponse) ProtoMessage()    {}
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5186d1a296b1a7f5, []int{7}
}

func (m *DeleteCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentResponse.Unmarshal(m, b)
}
func (m *DeleteCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentResponse.Merge(m, src)
}
func (m *DeleteCommentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentResponse.Size(m)
}
func (m *DeleteCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListCommentsRequest)(nil), "comment.ListCommentsRequest")
	proto.RegisterType((*ListCommentsResponse)(nil), "comment.ListCommentsResponse")
	proto.RegisterType((*SingleComment)(nil), "comment.SingleComment")
	proto.RegisterType((*CreateCommentRequest)(nil), "comment.CreateCommentRequest")
	proto.RegisterType((*UpdateCommentRequest)(nil), "comment.UpdateCommentRequest")
	proto.RegisterType((*UpdateCommentResponse)(nil), "comment.UpdateCommentResponse")
	proto.RegisterType((*DeleteCommentRequest)(nil), "comment.DeleteCommentRequest")
	proto.RegisterType((*DeleteCommentResponse)(nil), "comment.DeleteCommentResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommentClient is the client API for Comment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentClient interface {
	ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error)
	CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*SingleComment, error)
	UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*UpdateCommentResponse, error)
	DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error)
}

type commentClient struct {
	cc *grpc.ClientConn
}

func NewCommentClient(cc *grpc.ClientConn) CommentClient {
	return &commentClient{cc}
}

func (c *commentClient) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	out := new(ListCommentsResponse)
	err := c.cc.Invoke(ctx, "/comment.Comment/ListComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*SingleComment, error) {
	out := new(SingleComment)
	err := c.cc.Invoke(ctx, "/comment.Comment/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) UpdateComment(ctx context.Context, in *UpdateCommentRequest, opts ...grpc.CallOption) (*UpdateCommentResponse, error) {
	out := new(UpdateCommentResponse)
	err := c.cc.Invoke(ctx, "/comment.Comment/UpdateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error) {
	out := new(DeleteCommentResponse)
	err := c.cc.Invoke(ctx, "/comment.Comment/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentServer is the server API for Comment service.
type CommentServer interface {
	ListComments(context.Context, *ListCommentsRequest) (*ListCommentsResponse, error)
	CreateComment(context.Context, *CreateCommentRequest) (*SingleComment, error)
	UpdateComment(context.Context, *UpdateCommentRequest) (*UpdateCommentResponse, error)
	DeleteComment(context.Context, *DeleteCommentRequest) (*DeleteCommentResponse, error)
}

func RegisterCommentServer(s *grpc.Server, srv CommentServer) {
	s.RegisterService(&_Comment_serviceDesc, srv)
}

func _Comment_ListComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServer).ListComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.Comment/ListComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServer).ListComments(ctx, req.(*ListCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Comment_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.Comment/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServer).CreateComment(ctx, req.(*CreateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Comment_UpdateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServer).UpdateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.Comment/UpdateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServer).UpdateComment(ctx, req.(*UpdateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Comment_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.Comment/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Comment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comment.Comment",
	HandlerType: (*CommentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListComments",
			Handler:    _Comment_ListComments_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _Comment_CreateComment_Handler,
		},
		{
			MethodName: "UpdateComment",
			Handler:    _Comment_UpdateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _Comment_DeleteComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/comment/proto/comment.proto",
}

func init() {
	proto.RegisterFile("services/comment/proto/comment.proto", fileDescriptor_5186d1a296b1a7f5)
}

var fileDescriptor_5186d1a296b1a7f5 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xd1, 0x8e, 0x93, 0x40,
	0x14, 0x0d, 0xb0, 0xbb, 0x5d, 0xee, 0x4a, 0x62, 0x46, 0x54, 0x42, 0xd6, 0x95, 0x10, 0x1f, 0x78,
	0xa2, 0x09, 0xbe, 0x18, 0xe3, 0x8b, 0x59, 0xe3, 0x83, 0x9a, 0x3e, 0x50, 0xfb, 0x01, 0x50, 0x6e,
	0xc9, 0xc4, 0xc2, 0x20, 0x33, 0x98, 0xe8, 0xc7, 0xf9, 0x33, 0xfe, 0x88, 0xe9, 0xc0, 0x50, 0x68,
	0x21, 0x7d, 0x9b, 0x3b, 0xf7, 0xdc, 0x33, 0xf7, 0x9c, 0x39, 0xf0, 0x86, 0x63, 0xfd, 0x8b, 0x6e,
	0x91, 0x2f, 0xb7, 0xac, 0x28, 0xb0, 0x14, 0xcb, 0xaa, 0x66, 0x82, 0xa9, 0x2a, 0x94, 0x15, 0x59,
	0x74, 0xa5, 0xfb, 0x3a, 0x67, 0x2c, 0xdf, 0x63, 0x0b, 0x4a, 0x9b, 0xdd, 0x52, 0xd0, 0x02, 0xb9,
	0x48, 0x8a, 0xaa, 0x45, 0xfa, 0x3f, 0xe0, 0xd9, 0x37, 0xca, 0xc5, 0x63, 0x8b, 0xe7, 0x31, 0xfe,
	0x6c, 0x90, 0x0b, 0xe2, 0xc0, 0xa2, 0x62, 0x5c, 0x6c, 0x68, 0xe6, 0x68, 0x9e, 0x16, 0x98, 0xb1,
	0x2a, 0x89, 0x0b, 0xb7, 0x55, 0x92, 0xe3, 0x9a, 0xfe, 0x41, 0x47, 0xf7, 0xb4, 0xe0, 0x3a, 0xee,
	0x6b, 0xf2, 0x00, 0x70, 0x38, 0xaf, 0x9a, 0x22, 0xc5, 0xda, 0x31, 0x64, 0x77, 0x70, 0xe3, 0x7f,
	0x01, 0x7b, 0xfc, 0x18, 0xaf, 0x58, 0xc9, 0x91, 0x44, 0x70, 0xdb, 0x2d, 0xcc, 0x1d, 0xcd, 0x33,
	0x82, 0xbb, 0xe8, 0x45, 0xa8, 0x04, 0xad, 0x69, 0x99, 0xef, 0xb1, 0x1b, 0x89, 0x7b, 0x9c, 0xff,
	0x4f, 0x03, 0x6b, 0xd4, 0x23, 0x4f, 0xc1, 0x68, 0xfa, 0x7d, 0x0f, 0xc7, 0xa1, 0x0a, 0x7d, 0xac,
	0x82, 0xc0, 0x55, 0xca, 0xb2, 0xdf, 0x72, 0x47, 0x33, 0x96, 0x67, 0x72, 0x0f, 0x66, 0x95, 0xd4,
	0x58, 0x4a, 0xfc, 0x95, 0x6c, 0x1c, 0x2f, 0xc8, 0x3b, 0x30, 0xb7, 0x35, 0x26, 0x02, 0xb3, 0x8f,
	0xc2, 0xb9, 0xf6, 0xb4, 0xe0, 0x2e, 0x72, 0xc3, 0xd6, 0xdd, 0x50, 0xb9, 0x1b, 0x7e, 0x57, 0xee,
	0xc6, 0x47, 0x30, 0x79, 0x0f, 0x50, 0xb0, 0x8c, 0xee, 0xa8, 0x1c, 0xbd, 0xb9, 0x38, 0x3a, 0x40,
	0xfb, 0x29, 0xd8, 0x8f, 0x92, 0x48, 0x19, 0x70, 0xf1, 0x7f, 0x94, 0x32, 0x7d, 0x4e, 0x99, 0x71,
	0xa2, 0xcc, 0xff, 0x00, 0xf6, 0xa6, 0xca, 0xce, 0xdf, 0x38, 0xf7, 0x73, 0x82, 0xdb, 0x7f, 0x09,
	0xcf, 0x4f, 0xa6, 0xdb, 0x4f, 0xf5, 0x03, 0xb0, 0x3f, 0xe1, 0x1e, 0x2f, 0xd3, 0x1e, 0x28, 0x4e,
	0x90, 0x2d, 0x45, 0xf4, 0x57, 0x87, 0x85, 0xfa, 0xdd, 0xaf, 0xf0, 0x64, 0x98, 0x1d, 0x72, 0xdf,
	0x27, 0x64, 0x22, 0xbf, 0xee, 0xab, 0x99, 0x6e, 0x17, 0xb8, 0xcf, 0x60, 0x8d, 0x6c, 0x25, 0x47,
	0xfc, 0x94, 0xdd, 0xee, 0x4c, 0x1c, 0xc9, 0x0a, 0xac, 0x91, 0xf8, 0x01, 0xcf, 0x94, 0xa5, 0xee,
	0xc3, 0x5c, 0xbb, 0xdb, 0x6b, 0x05, 0xd6, 0xc8, 0x89, 0x01, 0xdf, 0x94, 0x97, 0x03, 0xbe, 0x49,
	0x03, 0xd3, 0x1b, 0x19, 0xaf, 0xb7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x31, 0x9c, 0x77, 0x5d,
	0x36, 0x04, 0x00, 0x00,
}
